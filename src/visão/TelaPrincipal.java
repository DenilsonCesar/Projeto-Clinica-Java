/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package visão;

import java.sql.SQLException;
import javax.swing.JOptionPane;
import modeloConection.ConexaoBD;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Denilson
 */
public class TelaPrincipal extends javax.swing.JFrame {

    ConexaoBD conectar = new ConexaoBD();
    CadMedicos medico = new CadMedicos();
    CadUsuario usuario = new CadUsuario();
    TelaLogin login = new TelaLogin();
    CadPacientes paciente = new CadPacientes();
    cadAgendamento agenda = new cadAgendamento();
    

    /**
     * Creates new form TelaPrincipal
     *
     * @param usuario
     */
    public TelaPrincipal(String usuario) {
        initComponents();
        txtUsuarioNome.setText(usuario);
        conectar.conexao();
    }

    private TelaPrincipal() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jInternalFrameBemVindo = new javax.swing.JInternalFrame();
        jPanelInternal = new javax.swing.JPanel();
        btnBVCadMedicos = new javax.swing.JButton();
        jButtonCadEnfermeiras = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jButtonCadPacientes = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jButtonAgenda = new javax.swing.JButton();
        jLabelPainelFundo = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jButtonFechar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtUsuarioNome = new javax.swing.JLabel();
        jLabelFundoPrincipal = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuCadastros = new javax.swing.JMenu();
        btnCadMedicos = new javax.swing.JMenuItem();
        jMenuItemPacientes = new javax.swing.JMenuItem();
        jMenuItemEnfermeiras = new javax.swing.JMenuItem();
        jMenuItemUsuarios = new javax.swing.JMenuItem();
        jMenuRelatorios = new javax.swing.JMenu();
        btnRelPaciente = new javax.swing.JMenuItem();
        jMenuFerramentas = new javax.swing.JMenu();
        jMenuItemTelaBemVindo = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuSair = new javax.swing.JMenu();
        jMenuItemSair = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jInternalFrameBemVindo.setTitle("Bem-Vindo");
        jInternalFrameBemVindo.setVisible(true);
        jInternalFrameBemVindo.getContentPane().setLayout(null);

        jPanelInternal.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanelInternal.setLayout(null);

        btnBVCadMedicos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/CadMedicos.png"))); // NOI18N
        btnBVCadMedicos.setToolTipText("Médicos");
        btnBVCadMedicos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBVCadMedicosActionPerformed(evt);
            }
        });
        jPanelInternal.add(btnBVCadMedicos);
        btnBVCadMedicos.setBounds(20, 50, 120, 120);

        jButtonCadEnfermeiras.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icon-infermeira.png"))); // NOI18N
        jButtonCadEnfermeiras.setToolTipText("Enfermeiras");
        jPanelInternal.add(jButtonCadEnfermeiras);
        jButtonCadEnfermeiras.setBounds(150, 50, 120, 120);

        jLabel2.setText("Cadastros -");
        jPanelInternal.add(jLabel2);
        jLabel2.setBounds(20, 30, 70, 14);

        jButtonCadPacientes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/cadPacientes.png"))); // NOI18N
        jButtonCadPacientes.setToolTipText("Pacientes");
        jButtonCadPacientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCadPacientesActionPerformed(evt);
            }
        });
        jPanelInternal.add(jButtonCadPacientes);
        jButtonCadPacientes.setBounds(280, 50, 120, 120);

        jLabel3.setText("Agenda -");
        jPanelInternal.add(jLabel3);
        jLabel3.setBounds(20, 180, 50, 14);

        jButtonAgenda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Agenda.png"))); // NOI18N
        jButtonAgenda.setToolTipText("Agendamento");
        jButtonAgenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAgendaActionPerformed(evt);
            }
        });
        jPanelInternal.add(jButtonAgenda);
        jButtonAgenda.setBounds(20, 200, 120, 110);

        jLabelPainelFundo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/internalframe.png"))); // NOI18N
        jPanelInternal.add(jLabelPainelFundo);
        jLabelPainelFundo.setBounds(10, 0, 820, 320);

        jInternalFrameBemVindo.getContentPane().add(jPanelInternal);
        jPanelInternal.setBounds(-10, 50, 830, 320);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Sistema de Gerenciamento de:");
        jInternalFrameBemVindo.getContentPane().add(jLabel1);
        jLabel1.setBounds(20, 10, 240, 22);

        jButtonFechar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/exit.png"))); // NOI18N
        jButtonFechar.setToolTipText("Fechar Tela Bem-Vindo");
        jButtonFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFecharActionPerformed(evt);
            }
        });
        jInternalFrameBemVindo.getContentPane().add(jButtonFechar);
        jButtonFechar.setBounds(770, 0, 40, 40);

        getContentPane().add(jInternalFrameBemVindo);
        jInternalFrameBemVindo.setBounds(0, 70, 830, 400);

        jLabel4.setText("Usuário:");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(10, 464, 50, 30);

        txtUsuarioNome.setText("jLabel5");
        getContentPane().add(txtUsuarioNome);
        txtUsuarioNome.setBounds(60, 464, 180, 30);

        jLabelFundoPrincipal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/fundo_telaprincipal.jpg"))); // NOI18N
        getContentPane().add(jLabelFundoPrincipal);
        jLabelFundoPrincipal.setBounds(0, 0, 830, 490);

        jMenuCadastros.setText("Cadastros");

        btnCadMedicos.setText("Médicos");
        btnCadMedicos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadMedicosActionPerformed(evt);
            }
        });
        jMenuCadastros.add(btnCadMedicos);

        jMenuItemPacientes.setText("Pacientes");
        jMenuItemPacientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemPacientesActionPerformed(evt);
            }
        });
        jMenuCadastros.add(jMenuItemPacientes);

        jMenuItemEnfermeiras.setText("Enfermeiras");
        jMenuItemEnfermeiras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemEnfermeirasActionPerformed(evt);
            }
        });
        jMenuCadastros.add(jMenuItemEnfermeiras);

        jMenuItemUsuarios.setText("Usuários");
        jMenuItemUsuarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemUsuariosActionPerformed(evt);
            }
        });
        jMenuCadastros.add(jMenuItemUsuarios);

        jMenuBar1.add(jMenuCadastros);

        jMenuRelatorios.setText("Relátorios");

        btnRelPaciente.setText("Pacientes");
        btnRelPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRelPacienteActionPerformed(evt);
            }
        });
        jMenuRelatorios.add(btnRelPaciente);

        jMenuBar1.add(jMenuRelatorios);

        jMenuFerramentas.setText("Ferramentas");

        jMenuItemTelaBemVindo.setText("Tela bem-Vindo");
        jMenuItemTelaBemVindo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemTelaBemVindoActionPerformed(evt);
            }
        });
        jMenuFerramentas.add(jMenuItemTelaBemVindo);

        jMenuBar1.add(jMenuFerramentas);

        jMenu1.setText("Agenda");

        jMenuItem1.setText("Agenda Hoje");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Agenda Médica");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        jMenuSair.setText("Opções");

        jMenuItemSair.setText("Sair");
        jMenuItemSair.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuItemSairMouseClicked(evt);
            }
        });
        jMenuItemSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSairActionPerformed(evt);
            }
        });
        jMenuSair.add(jMenuItemSair);

        jMenuBar1.add(jMenuSair);

        setJMenuBar(jMenuBar1);

        setSize(new java.awt.Dimension(850, 556));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItemEnfermeirasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemEnfermeirasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItemEnfermeirasActionPerformed

    private void jButtonFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFecharActionPerformed
        jInternalFrameBemVindo.dispose();
    }//GEN-LAST:event_jButtonFecharActionPerformed

    private void jMenuItemSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSairActionPerformed
        // conectar.desconectar();
        this.dispose();
        if(login == null){
            login = new TelaLogin();
            login.setVisible(true);
            login.setResizable(false);
        }else{
            //o else e para no caso de clickar duas vezes para abrir o mesmo formulario que ja está aberto ele reabra o que ja está aberto
            login.setVisible(true);
            login.setResizable(false);
        }
    }//GEN-LAST:event_jMenuItemSairActionPerformed

    private void jMenuItemTelaBemVindoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemTelaBemVindoActionPerformed
        /*  TelaPrincipal tela = new TelaPrincipal();
        tela.setVisible(true);
        dispose();
         */
        jInternalFrameBemVindo.setVisible(true);


    }//GEN-LAST:event_jMenuItemTelaBemVindoActionPerformed

    private void btnCadMedicosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadMedicosActionPerformed
        try {
            conectar.executeSQL("Select * from usuarios where usu_nome = '" + txtUsuarioNome.getText() + "'");
            conectar.rs.first();
            if (conectar.rs.getString("usu_tipo").equals("administrador")) {
                //Para que não abra mais de uma tela de cadastro de medicos
                if (medico == null) {
                    medico = new CadMedicos();
                    medico.setVisible(true);
                    //Para que a tela de cadastro de medico não seja redimecionada
                    medico.setResizable(false);
                } else {
                    //o else e para no caso de clickar duas vezes para abrir o mesmo formulario que ja está aberto ele reabra o que ja está aberto
                    medico.setVisible(true);
                    medico.setResizable(false);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Você não tem permissão para essa funcionalidade!\nContate o administrador do sistema!");
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Você não tem permissão para essa funcionalidade!n/Contate o administrador do sistema!");
        }
    }//GEN-LAST:event_btnCadMedicosActionPerformed

    private void btnBVCadMedicosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBVCadMedicosActionPerformed

        try {
            conectar.executeSQL("Select * from usuarios where usu_nome = '" + txtUsuarioNome.getText() + "'");
            conectar.rs.first();
            if (conectar.rs.getString("usu_tipo").equals("administrador")) {
                //Para que não abra mais de uma tela de cadastro de medicos
                if (medico == null) {
                    medico = new CadMedicos();
                    medico.setVisible(true);
                    //Para que a tela de cadastro de medico não seja redimecionada
                    medico.setResizable(false);
                } else {
                    //o else e para no caso de clickar duas vezes para abrir o mesmo formulario que ja está aberto ele reabra o que ja está aberto
                    medico.setVisible(true);
                    medico.setResizable(false);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Você não tem permissão para essa funcionalidade!\nContate o administrador do sistema!");
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Você não tem permissão para essa funcionalidade!n/Contate o administrador do sistema!");
        }
    }//GEN-LAST:event_btnBVCadMedicosActionPerformed

    private void jMenuItemSairMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItemSairMouseClicked
        System.exit(0);
    }//GEN-LAST:event_jMenuItemSairMouseClicked

    private void jMenuItemUsuariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemUsuariosActionPerformed
        try {
            conectar.executeSQL("Select * from usuarios where usu_nome = '" + txtUsuarioNome.getText() + "'");
            conectar.rs.first();
            if (conectar.rs.getString("usu_tipo").equals("administrador")) {
                //Para que não abra mais de uma tela de cadastro de medicos
                if (usuario == null) {
                    usuario = new CadUsuario();
                    usuario.setVisible(true);
                    //Para que a tela de cadastro de medico não seja redimecionada
                    usuario.setResizable(false);
                } else {
                    //o else e para no caso de clickar duas vezes para abrir o mesmo formulario que ja está aberto ele reabra o que ja está aberto
                    usuario.setVisible(true);
                    usuario.setResizable(false);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Você não tem permissão para essa funcionalidade!\nContate o administrador do sistema!");
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Você não tem permissão para essa funcionalidade!n/Contate o administrador do sistema!");
        }
    }//GEN-LAST:event_jMenuItemUsuariosActionPerformed

    private void jMenuItemPacientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemPacientesActionPerformed
        try {
            conectar.executeSQL("Select * from usuarios where usu_nome = '" + txtUsuarioNome.getText() + "'");
            conectar.rs.first();
            if (conectar.rs.getString("usu_tipo").equals("administrador")) {
                //Para que não abra mais de uma tela de cadastro de medicos
                if (paciente == null) {
                    paciente = new CadPacientes();
                    paciente.setVisible(true);
                    //Para que a tela de cadastro de medico não seja redimecionada
                    paciente.setResizable(false);
                } else {
                    //o else e para no caso de clickar duas vezes para abrir o mesmo formulario que ja está aberto ele reabra o que ja está aberto
                    paciente.setVisible(true);
                    paciente.setResizable(false);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Você não tem permissão para essa funcionalidade!\nContate o administrador do sistema!");
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Você não tem permissão para essa funcionalidade!n/Contate o administrador do sistema!");
        }
    }//GEN-LAST:event_jMenuItemPacientesActionPerformed

    private void jButtonCadPacientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCadPacientesActionPerformed
        try {
            conectar.executeSQL("Select * from usuarios where usu_nome = '" + txtUsuarioNome.getText() + "'");
            conectar.rs.first();
            if (conectar.rs.getString("usu_tipo").equals("administrador")) {
                //Para que não abra mais de uma tela de cadastro de medicos
                if (paciente == null) {
                    paciente = new CadPacientes();
                    paciente.setVisible(true);
                    //Para que a tela de cadastro de medico não seja redimecionada
                    paciente.setResizable(false);
                } else {
                    //o else e para no caso de clickar duas vezes para abrir o mesmo formulario que ja está aberto ele reabra o que ja está aberto
                    paciente.setVisible(true);
                    paciente.setResizable(false);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Você não tem permissão para essa funcionalidade!\nContate o administrador do sistema!");
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Você não tem permissão para essa funcionalidade!n/Contate o administrador do sistema!");
        }
    }//GEN-LAST:event_jButtonCadPacientesActionPerformed

    private void jButtonAgendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAgendaActionPerformed
         try {
            conectar.executeSQL("Select * from usuarios where usu_nome = '" + txtUsuarioNome.getText() + "'");
            conectar.rs.first();
            if (conectar.rs.getString("usu_tipo").equals("administrador")) {
                //Para que não abra mais de uma tela de cadastro de medicos
                if (agenda == null) {
                    agenda = new cadAgendamento();
                    agenda.setVisible(true);
                    //Para que a tela de cadastro de medico não seja redimecionada
                    agenda.setResizable(false);
                } else {
                    //o else e para no caso de clickar duas vezes para abrir o mesmo formulario que ja está aberto ele reabra o que ja está aberto
                    agenda.setVisible(true);
                    agenda.setResizable(false);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Você não tem permissão para essa funcionalidade!\nContate o administrador do sistema!");
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Você não tem permissão para essa funcionalidade!n/Contate o administrador do sistema!");
        }
    }//GEN-LAST:event_jButtonAgendaActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        cadAgenda tela = new cadAgenda();
        tela.setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        cadAgendaMedica tela = new cadAgendaMedica();
        tela.setVisible(true);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    //Para gerar um relario com o franework jasprReports
    private void btnRelPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRelPacienteActionPerformed
        // esse método chama o nosso  relatorio de pacientes
        // Gerando um relatório de clientes
        int confirma = JOptionPane.showConfirmDialog(null, "Confirma a impressão deste relatório?","Atenção",JOptionPane.YES_NO_OPTION);
        if(confirma == JOptionPane.YES_OPTION){
            //imprimindo o relatório com o framework JasperReports
            try {
                //usando a classe JasperPrint para preparar a impressão de um relarório
                JasperPrint print = JasperFillManager.fillReport("C:/reports/Relatório de Pacientes.jasper", null, conectar.conexa0);
                //A linha abaixo exibe o relatório através da classe JasperViewer
                JasperViewer.viewReport(print, false);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }
    }//GEN-LAST:event_btnRelPacienteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new TelaPrincipal().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBVCadMedicos;
    private javax.swing.JMenuItem btnCadMedicos;
    private javax.swing.JMenuItem btnRelPaciente;
    private javax.swing.JButton jButtonAgenda;
    private javax.swing.JButton jButtonCadEnfermeiras;
    private javax.swing.JButton jButtonCadPacientes;
    private javax.swing.JButton jButtonFechar;
    private javax.swing.JInternalFrame jInternalFrameBemVindo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabelFundoPrincipal;
    private javax.swing.JLabel jLabelPainelFundo;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu jMenuCadastros;
    private javax.swing.JMenu jMenuFerramentas;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItemEnfermeiras;
    private javax.swing.JMenuItem jMenuItemPacientes;
    private javax.swing.JMenuItem jMenuItemSair;
    private javax.swing.JMenuItem jMenuItemTelaBemVindo;
    private javax.swing.JMenuItem jMenuItemUsuarios;
    private javax.swing.JMenu jMenuRelatorios;
    private javax.swing.JMenu jMenuSair;
    private javax.swing.JPanel jPanelInternal;
    private javax.swing.JLabel txtUsuarioNome;
    // End of variables declaration//GEN-END:variables
}
