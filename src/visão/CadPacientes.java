/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package visão;

import CModeloDaoMetodos.daoPacientes;
import MmodeloBeansAtributos.BeansPacientes;
import MmodeloBeansAtributos.ModeloTabela;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import modeloConection.ConexaoBD;

/**
 *
 * @author Denilson
 */
public class CadPacientes extends javax.swing.JFrame {

    ConexaoBD conexao0 = new ConexaoBD();
    BeansPacientes paciente = new BeansPacientes();
    daoPacientes dao = new daoPacientes();
    int resposta = 0;
    int flag = 0;

    public CadPacientes() {
        initComponents();
        preecherBairros();
        preencherTabela("select paci_codigo, paci_nome, paci_telefone, paci_rg, bainome from pacientes inner join bairro on paci_baicodigo = baicodigo order by paci_nome");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtNomePaciente = new javax.swing.JTextField();
        txtDataNasc = new javax.swing.JFormattedTextField();
        txtFonePaciente = new javax.swing.JFormattedTextField();
        txtRgPaciente = new javax.swing.JFormattedTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtRua = new javax.swing.JTextField();
        cboBairro = new javax.swing.JComboBox<>();
        txtCep = new javax.swing.JFormattedTextField();
        jLabel7 = new javax.swing.JLabel();
        txtComplemento = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPacientes = new javax.swing.JTable();
        btnNovo = new javax.swing.JButton();
        btnSalvar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnAlterar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        txtPesquisar = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        txtCod = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel2.setText("Nome:");

        jLabel3.setText("Nascimento:");

        jLabel4.setText("Rg:");

        jLabel5.setText("Telefone:");

        txtNomePaciente.setEnabled(false);
        txtNomePaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomePacienteActionPerformed(evt);
            }
        });

        try {
            txtDataNasc.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtDataNasc.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtDataNasc.setEnabled(false);

        try {
            txtFonePaciente.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##) 9####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtFonePaciente.setEnabled(false);

        try {
            txtRgPaciente.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("#######-#")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtRgPaciente.setEnabled(false);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Endereço"));

        jLabel6.setText("Rua:");

        jLabel8.setText("Cep:");

        jLabel9.setText("Bairro:");

        txtRua.setEnabled(false);

        cboBairro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboBairro.setEnabled(false);

        try {
            txtCep.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("#####-###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtCep.setEnabled(false);

        jLabel7.setText("Complemento:");

        txtComplemento.setEnabled(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtRua, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel8))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtComplemento, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel9)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cboBairro, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtCep))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtRua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(txtCep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(cboBairro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(txtComplemento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tblPacientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tblPacientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPacientesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblPacientes);

        btnNovo.setText("Novo");
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });

        btnSalvar.setText("Salvar");
        btnSalvar.setEnabled(false);
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.setEnabled(false);
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnAlterar.setText("Alterar");
        btnAlterar.setEnabled(false);
        btnAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarActionPerformed(evt);
            }
        });

        btnExcluir.setText("Excluir");
        btnExcluir.setEnabled(false);
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        jLabel10.setText("Pesquisar:");

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        jLabel11.setText("Cod:");

        txtCod.setEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 422, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnBuscar))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(58, 58, 58)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtCod, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(txtRgPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtFonePaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(txtNomePaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtDataNasc, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 10, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(btnNovo)
                .addGap(28, 28, 28)
                .addComponent(btnSalvar)
                .addGap(31, 31, 31)
                .addComponent(btnCancelar)
                .addGap(29, 29, 29)
                .addComponent(btnAlterar)
                .addGap(29, 29, 29)
                .addComponent(btnExcluir)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnAlterar, btnCancelar, btnExcluir, btnNovo, btnSalvar});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtNomePaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(txtDataNasc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(txtRgPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtFonePaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNovo)
                    .addComponent(btnCancelar)
                    .addComponent(btnAlterar)
                    .addComponent(btnExcluir)
                    .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnAlterar, btnCancelar, btnExcluir, btnNovo, btnSalvar});

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Formulário de Pacientes");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(204, 204, 204)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        setSize(new java.awt.Dimension(640, 600));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public void preecherBairros() {
        conexao0.conexao();
        conexao0.executeSQL("select * from bairro order by bainome");
        try {
            conexao0.rs.first();
            //vai limpar o combro box os dados que ja vem no campo para aparecer somente os do bd
            cboBairro.removeAllItems();
            do {
                //vai adicionar um item que sera o bainome, no caso sera o selecionado
                cboBairro.addItem(conexao0.rs.getString("bainome"));
            } while (conexao0.rs.next());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao preecher bairros" + ex);
        }

    }

    private void txtNomePacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomePacienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomePacienteActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        paciente.setPesquisar(txtPesquisar.getText());
        //o valor retornado do paciente vai ser armazenado dentro do pac
        BeansPacientes pac = dao.buscarPacientes(paciente);
        txtNomePaciente.setText(paciente.getNomePac());
        txtCep.setText(paciente.getCep());
        txtCod.setText(String.valueOf(paciente.getCodPac()));
        txtComplemento.setText(paciente.getComplemento());
        txtDataNasc.setText(paciente.getNasc());
        txtFonePaciente.setText(paciente.getTelefone());
        txtRgPaciente.setText(paciente.getRg());
        txtRua.setText(paciente.getRua());
        btnNovo.setEnabled(false);
        btnAlterar.setEnabled(true);
        btnCancelar.setEnabled(true);
        btnExcluir.setEnabled(true);
        btnSalvar.setEnabled(false);
        //preencherTabela("select * from pacientes where paci_nome like '%" + paciente.getPesquisar()+ "%'");
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        if (txtNomePaciente.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Preencha o campo NOME para continuar!");
            //Para ir direto para o campo nome para o mais rapido ser preenchido
            txtNomePaciente.requestFocus();
            //equals para os campos com formatação
        } else if (txtDataNasc.getText().equals("  /  /    ")) {
            JOptionPane.showMessageDialog(null, "Preencha o campo NASCIMENTO para continuar!");
            txtDataNasc.requestFocus();
            //equals para os campos com formatação
        } else if (txtRgPaciente.getText().equals("       - ")) {
            JOptionPane.showMessageDialog(null, "Preencha o campo RG para continuar!");
            txtRgPaciente.requestFocus();
            //equals para os campos com formatação
        } else if (txtFonePaciente.getText().equals("(  )9    -    ")){
            JOptionPane.showMessageDialog(null, "Preencha o campo TELEFONE para continuar!");
            txtFonePaciente.requestFocus();
        } else if (txtRua.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Preencha o campo RUA para continuar!");
            txtRua.requestFocus();
            //equals para os campos com formatação
        } else if (txtCep.getText().equals("     -  ")) {
            JOptionPane.showMessageDialog(null, "Preencha o campo CEP para continuar!");
            txtCep.requestFocus();
        } else if (txtComplemento.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Preencha o campo COMPLEMENTO para continuar!");
            txtComplemento.requestFocus();
        } else 
            if (flag == 1) {
            paciente.setNomePac(txtNomePaciente.getText());
            paciente.setRg(txtRgPaciente.getText());
            paciente.setTelefone(txtFonePaciente.getText());
            paciente.setCep(txtCep.getText());
            paciente.setNasc(txtDataNasc.getText());
            paciente.setRua(txtRua.getText());
            paciente.setComplemento(txtComplemento.getText());
            paciente.setNomeBairro(cboBairro.getSelectedItem().toString());
            dao.salvar(paciente);
            txtCod.setText("");
            txtNomePaciente.setText("");
            txtCep.setText("");
            txtComplemento.setText("");
            txtDataNasc.setText("");
            txtFonePaciente.setText("");
            txtRgPaciente.setText("");
            txtRua.setText("");
            btnSalvar.setEnabled(false);
            btnCancelar.setEnabled(false);
            btnNovo.setEnabled(true);
            btnAlterar.setEnabled(false);
            btnExcluir.setEnabled(false);
            txtNomePaciente.setEnabled(false);
            txtCep.setEnabled(false);
            txtComplemento.setEnabled(false);
            txtDataNasc.setEnabled(false);
            txtFonePaciente.setEnabled(false);
            txtRgPaciente.setEnabled(false);
            txtRua.setEnabled(false);
            cboBairro.setEnabled(false);
            preencherTabela("select * from pacientes inner join bairro on paci_baicodigo = baicodigo order by paci_nome");
        }else{
            paciente.setNomePac(txtNomePaciente.getText());
            paciente.setRg(txtRgPaciente.getText());
            paciente.setTelefone(txtFonePaciente.getText());
            paciente.setCep(txtCep.getText());
            paciente.setNasc(txtDataNasc.getText());
            paciente.setRua(txtRua.getText());
            paciente.setComplemento(txtComplemento.getText());
            paciente.setNomeBairro(cboBairro.getSelectedItem().toString());
            paciente.setCodPac(Integer.parseInt(txtCod.getText()));
            dao.alterar(paciente);
            txtCod.setText("");
            txtNomePaciente.setText("");
            txtCep.setText("");
            txtComplemento.setText("");
            txtDataNasc.setText("");
            txtFonePaciente.setText("");
            txtRgPaciente.setText("");
            txtRua.setText("");
            btnSalvar.setEnabled(false);
            btnCancelar.setEnabled(false);
            btnNovo.setEnabled(true);
            btnAlterar.setEnabled(false);
            btnExcluir.setEnabled(false);
            txtNomePaciente.setEnabled(false);
            txtCep.setEnabled(false);
            txtComplemento.setEnabled(false);
            txtDataNasc.setEnabled(false);
            txtFonePaciente.setEnabled(false);
            txtRgPaciente.setEnabled(false);
            txtRua.setEnabled(false);
            cboBairro.setEnabled(false);
            preencherTabela("select * from pacientes inner join bairro on paci_baicodigo = baicodigo order by paci_nome");
            }
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed
        flag = 1;
        btnSalvar.setEnabled(true);
        btnCancelar.setEnabled(true);
        btnNovo.setEnabled(false);
        btnAlterar.setEnabled(false);
        btnExcluir.setEnabled(false);
        txtNomePaciente.setEnabled(true);
        txtCep.setEnabled(true);
        txtComplemento.setEnabled(true);
        txtDataNasc.setEnabled(true);
        txtFonePaciente.setEnabled(true);
        txtRgPaciente.setEnabled(true);
        txtRua.setEnabled(true);
        cboBairro.setEnabled(true);
    }//GEN-LAST:event_btnNovoActionPerformed

    private void btnAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarActionPerformed
        flag = 2;
        btnSalvar.setEnabled(true);
        btnCancelar.setEnabled(true);
        btnNovo.setEnabled(true);
        btnAlterar.setEnabled(false);
        btnExcluir.setEnabled(false);
        txtNomePaciente.setEnabled(true);
        txtCep.setEnabled(true);
        txtComplemento.setEnabled(true);
        txtDataNasc.setEnabled(true);
        txtFonePaciente.setEnabled(true);
        txtRgPaciente.setEnabled(true);
        txtRua.setEnabled(true);
        cboBairro.setEnabled(true);  
    }//GEN-LAST:event_btnAlterarActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
       resposta = JOptionPane.showConfirmDialog(null,"Deseja realmente excluir?","Atenção",JOptionPane.YES_NO_OPTION);
       if(resposta == JOptionPane.YES_OPTION){
            paciente.setCodPac(Integer.parseInt(txtCod.getText()));
            dao.excluir(paciente);
            txtCod.setText("");
            txtNomePaciente.setText("");
            txtCep.setText("");
            txtComplemento.setText("");
            txtDataNasc.setText("");
            txtFonePaciente.setText("");
            txtRgPaciente.setText("");
            txtRua.setText(""); 
            btnSalvar.setEnabled(false);
            btnCancelar.setEnabled(false);
            btnNovo.setEnabled(true);
            btnAlterar.setEnabled(false);
            btnExcluir.setEnabled(false);
            txtNomePaciente.setEnabled(false);
            txtCep.setEnabled(false);
            txtComplemento.setEnabled(false);
            txtDataNasc.setEnabled(false);
            txtFonePaciente.setEnabled(false);
            txtRgPaciente.setEnabled(false);
            txtRua.setEnabled(false);
            cboBairro.setEnabled(false);
            preencherTabela("select * from pacientes inner join bairro on paci_baicodigo = baicodigo order by paci_nome");
       }
          
        
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void tblPacientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPacientesMouseClicked
        //esta pegando o resultado da tabela que e o 1 o 0 e o id entao na posição um está salvando o nome e armazanando dentro do nome_paciente
        String nome_paciente = "" + tblPacientes.getValueAt(tblPacientes.getSelectedRow(), 1);
        conexao0.conexao();
        conexao0.executeSQL("select * from pacientes where paci_nome = '" + nome_paciente + "'");
        try {
            conexao0.rs.first();
            txtCod.setText(String.valueOf(conexao0.rs.getInt("paci_codigo")));
            txtNomePaciente.setText(conexao0.rs.getString("paci_nome"));
            txtDataNasc.setText(conexao0.rs.getString("paci_nasc"));
            txtCep.setText(conexao0.rs.getString("paci_cep"));
            txtComplemento.setText(conexao0.rs.getString("paci_complemento"));
            txtFonePaciente.setText(conexao0.rs.getString("paci_telefone"));
            txtRgPaciente.setText(conexao0.rs.getString("paci_rg"));
            txtRua.setText(conexao0.rs.getString("paci_rua"));
            //Para fazer a pesquisa no banco pelo nome do bairro
            ConexaoBD conexaoBairro = new ConexaoBD();
            conexaoBairro.conexao();
            //vai ser "conexao0" pq o codigo abaixo está fazendo uma comparação entre as duas conexões a conexaoBairro e a conexao0
            conexaoBairro.executeSQL("select * from bairro where baicodigo = "+ conexao0.rs.getInt("paci_baicodigo"));
            conexaoBairro.rs.first();
            cboBairro.setSelectedItem(conexaoBairro.rs.getString("bainome"));
            btnNovo.setEnabled(false);
            btnAlterar.setEnabled(true);
            btnCancelar.setEnabled(true);
            btnExcluir.setEnabled(true);
            btnSalvar.setEnabled(false);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao selecionar dados!" + ex);
        }
        
    }//GEN-LAST:event_tblPacientesMouseClicked

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        btnSalvar.setEnabled(false);
            btnCancelar.setEnabled(false);
            btnNovo.setEnabled(true);
            btnAlterar.setEnabled(false);
            btnExcluir.setEnabled(false);
            txtNomePaciente.setEnabled(false);
            txtCep.setEnabled(false);
            txtComplemento.setEnabled(false);
            txtDataNasc.setEnabled(false);
            txtFonePaciente.setEnabled(false);
            txtRgPaciente.setEnabled(false);
            txtRua.setEnabled(false);
            cboBairro.setEnabled(false);
            txtCod.setText("");
            txtNomePaciente.setText("");
            txtCep.setText("");
            txtComplemento.setText("");
            txtDataNasc.setText("");
            txtFonePaciente.setText("");
            txtRgPaciente.setText("");
            txtRua.setText("");
    }//GEN-LAST:event_btnCancelarActionPerformed
                                   
    public void preencherTabela(String sql) {
        //Esta instanciando as listas para fazer as linhas da tabela
        ArrayList dados = new ArrayList();
        //Instanciando a String sendo que e um vetor
        //{} dentro das chaves vai ser o nome das colunas
        //Esta instanciando as colunas para fazer as colunas da tabela
        String[] colunas = new String[]{"ID", "Nome", "Telefone", "Rg","Bairro"};
        //conexao0 e a instanciação da classe conexaoBD, e conexao e o metodo que está dentro dela que faz a conexão com o bd
        conexao0.conexao();
        //conexao0, é a conexao com o banco
        //Vai fazer a execução do codigo sql
        conexao0.executeSQL(sql);
        try {
            //vai pegar o primeiro resultado da conexao0
            conexao0.rs.first();
            do {//trazendo os campos do banco para a tabela
                dados.add(new Object[]{conexao0.rs.getInt("paci_codigo"), conexao0.rs.getString("paci_nome"), conexao0.rs.getString("paci_telefone"), conexao0.rs.getString("paci_rg"),conexao0.rs.getString("bainome")});
            }//Equanto estiver dados ele vai ficar percorrendo este registro, ele vai andar nas posicões pois não existe uma limitação e sim uma condição para ele percorrer tudo que ele achar
            while (conexao0.rs.next());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Paciente não cadastrado!\nPesquise por outro paciente!" + e);
        }
        //Dados a quantidade de linhas/ e colunas a quantidade de colunas
        ModeloTabela modelo = new ModeloTabela(dados, colunas);
        tblPacientes.setModel(modelo);
        //setPreferreWidth ela colocando o tamanho da tabela
        //getColumn(0) pq do (0)? pq a tabela começa do 0 como estamos trabalhado com um array ele começa da posição 0
        //getColumnModel é a coluna, getColumn e de onde vai começa a lista sendo que 0 e o ID e setPreferredWidth(23) é a lagura do campo id que vai receber os ids
        tblPacientes.getColumnModel().getColumn(0).setPreferredWidth(35);
        //setResizable e para o usuario não poder mexer no tamanho dos camposda tabela com o mouse esticado-a
        tblPacientes.getColumnModel().getColumn(0).setResizable(false);
        tblPacientes.getColumnModel().getColumn(1).setPreferredWidth(180);
        tblPacientes.getColumnModel().getColumn(1).setResizable(false);
        tblPacientes.getColumnModel().getColumn(2).setPreferredWidth(120);
        tblPacientes.getColumnModel().getColumn(2).setResizable(false);
        tblPacientes.getColumnModel().getColumn(3).setPreferredWidth(100);
        tblPacientes.getColumnModel().getColumn(3).setResizable(false);
        tblPacientes.getColumnModel().getColumn(4).setPreferredWidth(130);
        tblPacientes.getColumnModel().getColumn(4).setResizable(false);
        //Não vai poder reodenar o cabeçario
        tblPacientes.getTableHeader().setReorderingAllowed(false);
        //O usuario não poderá redimecionar o tamanho da tabela
        tblPacientes.setAutoResizeMode(tblPacientes.AUTO_RESIZE_OFF);
        //Para o usuario poder somente selecionar um unico usuario da tabela por vez
        tblPacientes.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

    }

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadPacientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadPacientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadPacientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadPacientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadPacientes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlterar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnNovo;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JComboBox<String> cboBairro;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblPacientes;
    private javax.swing.JFormattedTextField txtCep;
    private javax.swing.JTextField txtCod;
    private javax.swing.JTextField txtComplemento;
    private javax.swing.JFormattedTextField txtDataNasc;
    private javax.swing.JFormattedTextField txtFonePaciente;
    private javax.swing.JTextField txtNomePaciente;
    private javax.swing.JTextField txtPesquisar;
    private javax.swing.JFormattedTextField txtRgPaciente;
    private javax.swing.JTextField txtRua;
    // End of variables declaration//GEN-END:variables
}
